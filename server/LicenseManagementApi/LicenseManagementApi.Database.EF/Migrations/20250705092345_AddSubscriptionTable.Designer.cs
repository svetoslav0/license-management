// <auto-generated />
using System;
using LicenseManagementApi.Database.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenseManagementApi.Database.EF.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250705092345_AddSubscriptionTable")]
    partial class AddSubscriptionTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("LicenseManagementApi.Database.EF.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("PlanId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("plan_id");

                    b.Property<DateTime>("SwitchedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("switched_at");

                    b.HasKey("Id");

                    b.HasIndex("PlanId")
                        .IsUnique();

                    b.ToTable("subscription");
                });

            modelBuilder.Entity("LicenseManagementApi.Database.EF.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("SeatLimit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("limit");

                    b.HasKey("Id");

                    b.ToTable("plan");
                });

            modelBuilder.Entity("LicenseManagementApi.Database.EF.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("HasLicense")
                        .HasColumnType("INTEGER")
                        .HasColumnName("has_license");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("LicenseManagementApi.Database.EF.Models.Subscription", b =>
                {
                    b.HasOne("LicenseManagementApi.Database.EF.Models.SubscriptionPlan", "Plan")
                        .WithOne()
                        .HasForeignKey("LicenseManagementApi.Database.EF.Models.Subscription", "PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });
#pragma warning restore 612, 618
        }
    }
}
